{{- if .Capabilities.APIVersions.Has "rbac.authorization.k8s.io/v1beta1" }}
apiVersion: v1
kind: List
items:
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    name: redis-operator
  rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources:
    - customresourcedefinitions
    verbs: ["*"]
  - apiGroups: 
    - "{{ .Values.apiGroupName }}"
    resources:
    - redisclusters
    verbs: ["*"]
  - apiGroups: [""]
    resources:
    - pods
    - services
    - serviceaccounts
    verbs: ["*"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
    - roles
    - rolebindings
    verbs: ["*"]
  - apiGroups: [""]
    resources:
    - namespaces
    verbs: ["list"]
  - apiGroups: ["policy"]
    resources:
    - poddisruptionbudgets
    verbs: ["*"]
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    name: redis-operator
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: redis-operator
  subjects:
  - kind: ServiceAccount
    name: {{ .Values.serviceAccount }}
    namespace: {{ .Release.Namespace }}
{{- if .Values.broker.activate }}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: "redis-node"
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:
    name: redis-node
  rules:
  - apiGroups: [""]
    resources:
    - services
    - endpoints
    - pods
    verbs: ["list", "get"]
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    name: redis-node
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: redis-node
  subjects:
  - kind: ServiceAccount
    name: redis-node
    namespace: {{ .Release.Namespace }}
{{ end }}
{{ end }}